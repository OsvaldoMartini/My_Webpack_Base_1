@{
    ViewBag.Title = "Search Results";
    Layout = "~/Views/Shared/_LayoutWithFilter.cshtml";
}

@using IHS.Apps.CMP.Utilities
@model IHS.Apps.CMP.Models.ViewModels.ResultsPageModel

@section page_title
{

    <div class="page-header with-search-bar with-data-bind">
        <div class="search-bar">
            <div class="dashboardHeader">
                <span class="title grid-lg-1-4 grid-md-1-4 grid-xs-1-2 h1">
                    @Model.Name
                    @if (!string.IsNullOrEmpty(Model.SubTitle))
                    {
                        <small>@Model.SubTitle</small>
                    }
                </span>
               
                <span class="pull-right u-font-65">
                    <span class="btn-group viewToggle" data-bind="with: gridChartVM" style="letter-spacing: normal;">
                        <label class="btn" id="ToggleChart_" data-bind="css:{'btn-default active':viewChart, 'btn-primary': !viewChart()}">
                            <input type="checkbox" data-bind="checked:viewChart" /> <!-- ko text: viewChart()?'Hide':'View'--><!-- /ko --> Chart
                        </label>
                        <label class="btn" id="ToggleGrid_" data-bind="css:{'btn-default active': viewGrid, 'btn-primary': !viewGrid()}">
                            <input type="checkbox" data-bind="checked:viewGrid" /><!-- ko text: viewGrid()?'Hide':'View'--><!-- /ko --> Program Data
                        </label>
                    </span>
                    @*<button class="btn btn-link" data-bind="click:gridChartVM.ShowGuided" ><i class="icon-tutorial"></i>Guided Search</button>*@

                    <button class="btn btn-link" data-bind="click:tutorial.start.bind(tutorial)"><i class="icon-tutorial"></i>Tutorial</button>
                </span>

                <div class="u-font-65 u-padding-Bm"><a class="u-font-65 tipsyMe tipsy" title="Multiple charts and variables on all three axi to choose from" href="guided">Switch to current view</a></div>
            </div>
        </div>
    </div>

}

@section additional_css
{
    @Styles.Render("~/Content/results")
    <link href="@Url.Content("~/Views/AandD/JDB/DefenceBudgets.css")" rel="stylesheet">
}

@section additional_scripts
{
    @Scripts.Render("~/bundles/results")
    @Scripts.Render("~/bundles/highstock")
    @Scripts.Render("~/bundles/highstock-export")
    @Scripts.Render("~/bundles/defencebudgets")
    <script>
        var vm;
        //qualtricsPopup('SV_0T9gxsbwcY3jUnb', 1000 * 60 * 2, "Please take a few moments to let us know what you think about Defence Budgets.", 'JDBClassic'); 
        $(document).ready(function () {

            var searchQuery = window.location.search.substring(1) + window.location.hash;

            var options = {
                enableSearchBarAutoComplete: @Model.EnableSearchBarAutoComplete.ToString().ToLowerInvariant(),
                showAdvancedSearch: @Model.ShowAdvancedSearch.ToString().ToLowerInvariant(),
                showSearchBar: @Model.ShowSearchBar.ToString().ToLowerInvariant(),
                tutorial: {
                    cookie: "IHS_POPUP_0C28F356_0010_48FC_B348_EE68D204BD76",
                    name: "DefenceBudgetsTutorial",
                    maxPages: 5
                },
                userSettings : @Html.Raw(Model.Settings.ToJson())
                };

            vm = new ResultsVM('container', searchQuery, options, {gridChartVM: jdbGridChartVM});
            $.getJSON("/Views/AandD/JDB/help-classic.json", function(helpData){
                window.helpLinks = window.helpLinks || {};
                $.extend(window.helpLinks, helpData);
            });

            //Track which tab we are on in classic.
           
            var showDefenceTabOnceForLegacy = _.once(function () {
                
                $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(7) > a:contains('Standard')").click();
 
                _.delay(function(){
                }, 2000);

                $('#myTabContent').show();
                 

            });
            
            $(document).bind('FacetsProcessed', function(){
                console.log("Facets Processed");
                showPreviouslySelectedTab();
                showDefenceTabOnceForLegacy();

            });

          
        });
        var currentClassicTab = "Standard";

        var ClassicTabClicked_standard = function(){currentClassicTab = "Standard"; };
        var ClassicTabClicked_platform = function(){currentClassicTab = "Platform"; };
        var ClassicTabClicked_custom = function(){currentClassicTab = "Custom"; };
        var showPreviouslySelectedTab = function(){

            //// Ensure that the default facet panel is displayed when loading Defence Budgets Legacy
            //// If this element cannot be found for whatever reason, the first facet panel will be displayed (usually Defence from guided nav)
            $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(7) > a:contains('Standard')").off("click" , ClassicTabClicked_standard);
            $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(8) > a:contains('Platform')").off("click", ClassicTabClicked_platform );
            $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(9) > a:contains('Custom')").off("click", ClassicTabClicked_custom );
                   
            
            $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(6) > a:contains('Standard')").on("click", ClassicTabClicked_standard);
            $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(7) > a:contains('Platform')").on("click", ClassicTabClicked_platform);
            $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(8) > a:contains('Custom')").on("click", ClassicTabClicked_custom);
                  

            hidetabsforBeta();
            switch(currentClassicTab)
            {
                case "Standard": 
                    $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(6) > a:contains('Standard')").click();
                    break;

                case "Platform":
                    $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(7) > a:contains('Platform')").click();
                    break;

                case "Custom": 
                    $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(6) > a:contains('Standard')").click();
                    $("#filter > div:nth-child(2) > div > div > ul > li:nth-child(8) > a:contains('Custom')").click();
                    break;

            }
        }


        /****  beta scripting **/
        // hide the tabs for the moment, they still need to exist in the non-beta version. 
        
        function hidetabsforBeta(){
            //hide all the beta tabs
            $('#filter > div:nth-child(2) > div > div > ul > li:nth-child(1)').hide();
            $('#filter > div:nth-child(2) > div > div > ul > li:nth-child(2)').hide();
            $('#filter > div:nth-child(2) > div > div > ul > li:nth-child(3)').hide();
            $('#filter > div:nth-child(2) > div > div > ul > li:nth-child(4)').hide();
            $('#filter > div:nth-child(2) > div > div > ul > li:nth-child(5)').hide();
        }
        $('#myTabContent').hide();
        
    </script>
}

@section additional_markup
{
    @Html.Partial("../AandD/JDB/Tutorial", "datapage")
}

@section filters
{
    <div data-bind="with : facetsVM">

        @Html.Partial("LinkBreadCrumb", Model.Breadcrumb)

        @Html.Partial("Results/Facets/FacetsPanel")
    </div>

    @Html.Partial("../AandD/JDB/Tutorial", "filters")
}

<div class="grid-1">
    <!-- ko with: gridChartVM -->
    

    <ul class="nav nav-tabs toolbar" role="menubar">

        <li data-bind="visible: viewChart" class="u-padding-Hs u-padding-Vxxs" role="menuitem">
            <span>Defence Segment:</span>
            <div class="dropdown u-inline-block u-padding-Lxxs">
                <a id="_defenceSegmentDropdownTitle" href="#" class="dropdown-toggle" data-toggle="dropdown">
                    <span data-bind="text:DefenceSegment().text"></span>
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li class="dropdown-submenu" role="menuitem">
                        <a tabindex="-1" href="#">System Level</a>
                        <ul id="_ChangeDefenceSegmentDropdown" class="dropdown-menu" data-bind="foreach: settings.defenceSegments" role="menu">
                            <li data-bind="css:{active: $parent.DefenceSegment() == $data}"><a data-bind="attr:{'data-value': key}, text:text, click:$parent.DefenceSegment" role="menuitem" href="#"></a></li>
                        </ul>
                    </li>
                    <li class="dropdown-submenu" data-bind="css:{disabled: !CustomAttributes().length}" role="menuitem">
                        <a tabindex="-1" href="#">Custom Attributes</a>
                        <ul class="dropdown-menu" data-bind="foreach: CustomAttributes,visible: CustomAttributes().length" role="menu">
                            <li data-bind="css:{active: $parent.DefenceSegment() == $data}"><a data-bind="attr:{'data-value': key}, text:text, click:$parent.DefenceSegment" role="menuitem" href="#"></a></li>
                        </ul>
                    </li>
                    <li class="dropdown-submenu" data-bind="css:{disabled: !CustomSegments().length}" role="menuitem">
                        <a tabindex="-1" href="#">My Customisations</a>
                        <ul class="dropdown-menu" data-bind="foreach: CustomSegments,visible: CustomSegments().length" role="menu">
                            <li data-bind="css:{active: $parent.DefenceSegment() == $data}"><a data-bind="attr:{'data-value': key}, text:text, click:$parent.DefenceSegment" role="menuitem" href="#"></a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </li>

        <li data-bind="visible: viewChart" class="u-padding-Hs u-padding-Vxxs" role="menuitem">
            <span class="u-padding-Lxl">Forecast Type:</span><div class="dropdown u-inline-block u-padding-Lxxs">
                <a href="#" id="ForeCastTypeDropdownTitle" class="dropdown-toggle" data-toggle="dropdown">
                    <span data-bind="text:ForecastType().text"></span>
                    <span class="caret"></span>
                </a>
                <ul id="ChangeForeCastTypeDropdown" class="dropdown-menu" data-bind="foreach: settings.forecastType">
                    <li data-bind="css:{active: $parent.ForecastType() == $data}"><a data-bind="attr:{'data-value': key}, text:text, click:$parent.ForecastType" role="menuitem" href="#"></a></li>
                </ul>
            </div>
        </li>
        <li role="menu" class="pull-right">
            <ul class="nav nav-tabs toolbar nav-tab-right" role="menubar">
                <!-- My Searches Dropdown-->
                <li id="savedSearchesDropdown" class="dropdown u-inline-block pull-right" role="menuitem">
                    <a data-bind="click:savedSearchesVM.CheckSavedSearchesLoaded" href="#" class="dropdown-toggle" data-toggle="dropdown">
                        <i class="icon-folder-open large"></i> My Saved Searches
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-right" role="menu">
                        <li><a href="javascript:void(0)" data-bind="click: function(){$parent.commandsVM.saveSearch('','')}" role="menuitem"><i class="icon-folder-open"></i> Save Current Search</a></li>
                        <li data-bind="visible: savedSearchesVM.savedSearches().length == 0" style="height: 60px;" role="menuitem">
                            <div class="loading sm text" data-bind="visible: !savedSearchesVM.savedSearchesLoaded()"> Loading...</div>
                            <p class="u-padding-Hs u-padding-Vxxs" data-bind="visible: savedSearchesVM.savedSearchesLoaded"> No searches currently saved. </p>
                        </li>
                        <!-- ko with: savedSearchesVM -->
                        <li data-bind="scrollbar: {}" style="max-height:300px;" role="menuitem">
                            <div data-bind="foreach: savedSearches">
                                <div class="u-padding-As relative">
                                    <a class="inline-block u-margin-Rxl" data-bind="click: $parent.loadSavedSearch, text: Name" href="#"></a>
                                    <a class="btn" style="position: absolute;top:5px;right: 5px; padding: 5px;" href="#" data-bind="interactiveDropdown: true, click: ToggleMerging, css:{'btn-primary':Merging, 'btn-link': !Merging()}" title="Merge searches by clicking here to select this search, ensure you select at least two to merge.">
                                        <i class="icon-flow-merge u-rotate-90 xlarge u-margin-An u-vertical-middle"></i>
                                    </a>
                                </div>
                            </div>
                        </li>

                        <li data-bind="fadeVisible: Merging,interactiveDropdown: true" role="menuitem">
                            <hr /><h4 class="u-padding-Ls">Merge searches</h4>
                            <div class="u-padding-As">
                                <span>New search name</span>
                                <input type="text" placeholder="name" data-bind="interactiveDropdown: true, value:NewSearchName" class="form-control" />
                                <input id="checkKeepExistingSearch" type="checkbox" data-bind="interactiveDropdown: true, checked:KeepExistingSearches" />
                                <label for="checkKeepExistingSearch" data-bind="interactiveDropdown: true">Keep Existing Searches</label>
                                @*<div>
                                        This code is for 4.1 when we implement AND/OR for merging searches (planned).
                                        <div class="btn-group" data-toggle="buttons">
                                            <label class="btn btn-default btn-radio active">
                                                <input type="radio" id="OrSearch" name="AndOr" checked>Or
                                            </label>
                                            <label class="btn btn-default btn-radio">
                                                <input type="radio" name="AndOr">And
                                            </label>
                                        </div>
                                        <a href="#" data-bind="toggleClick: AndOrDescriptionVisible"><i class="icon-help-circled xlarge"></i></a>
                                        <div  data-bind="visible: AndOrDescriptionVisible">
                                            <h3>And</h3>
                                            <span>
                                                Select this if you want your new search to return records which are
                                                present in <span class="u-bold">all</span>
                                                of the existing searches selected.
                                            </span>
                                            <h3>Or</h3><span> Select this if you want your new search to return records from
                                            <span class="u-bold">any</span> of the existing searches selected.  </span>
                                        </div>
                                    </div>*@
                                <button class="width-60 u-margin-Ts btn btn-primary" data-bind="interactiveDropdown: true, click: mergeSearches">Save</button>
                            </div>
                        </li>
                        <!-- /ko -->
                    </ul>
                </li>
                <!-- ko with: customisationsVM-->

                <li class="dropdown u-inline-block pull-right" role="menuitem">
                    @*KEEP THIS <a data-bind="click: CreateScenario" href="#">Create a scenario</a>*@

                    @Html.Partial("../AandD/JDB/CustomisationsPanel")
                </li>
                <!-- /ko -->
            </ul>
        </li>
    </ul>

    <div id="JDBHiChartContainer" class="u-border-all u-margin-Bm relative" data-bind="visible: viewChart, css: {fullscreen: chartFullscreen }">
        <div class="btn-group" role="group">
            <div class="btn-group" role="group">
                <button class="btn btn-default" data-toggle="dropdown" aria-expanded="false">
                    <i class="icon-export"></i>
                    <span class="tooltip">Export</span>
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu dropdown-menu-right" role="menu">
                    <li><a href="#" data-bind="click: editChartTitle"><i class="icon-pencil"></i> Edit chart title</a></li>
                    <li class="divider"></li>
                    <li><a href="#" data-bind="click: $data.ExportChart.bind($data,'pdf')"><i class="icon-file-pdf"></i> Export as PDF</a></li>
                    <li><a href="#" data-bind="click: $data.ExportChart.bind($data,'png')"><i class="icon-file-image"></i> Export as PNG</a></li>
                    <li><a href="#" data-bind="click: $data.ExportChart.bind($data,'svg')"><i class="icon-file-image"></i> Export as SVG</a></li>
                    <li><a href="#" data-bind="click: $data.ExportChart.bind($data,'jpg')"><i class="icon-file-image"></i> Export as JPEG</a></li>
                    <li><a href="#" data-bind="click: $data.PrintChart"><i class="icon-print"></i> Print chart</a></li>
                    <li class="divider"></li>
                    <li><a href="#" data-bind="click: exportDataTable"><i class="icon-file-excel"></i> Export chart summary to Excel</a></li>
                    <li><a class="tipsyMe" title="Click here to view an excel datasheet based on your current search" href="#" data-bind="click: loadCustomDataSheet"><i class="icon-file-excel"></i>Export Datasheet for this search</a></li>
                </ul>
            </div>
            <button class="btn btn-default toggle-fullscreen" data-bind="toggleClick: chartFullscreen, css:{'btn-primary': chartFullscreen}"><i class="icon-resize-full" data-bind="css:{'icon-resize-small':chartFullscreen}"></i><span class="tooltip">View chart full screen</span></button>
            <button class="btn btn-default toggle-chartData" data-bind="toggleClick: chartDataTable, css:{'btn-primary': chartDataTable()==false}"><i class="icon-th"></i><span class="tooltip">Toggle chart summary</span></button>
        </div>
    </div>
    <!-- /ko -->
</div>
<div class="grid gridJDB" data-bind="visible: gridChartVM.viewGrid">
    <div class="grid-1">

        <div data-bind="with : filterTabsVM">
            @Html.Action("GetFilterTabs", "Search")
        </div>

        <div data-bind="with: paginationVM">
            @Html.Partial("PartialPages/Results/GridMenu", Model.GridMenu)
        </div>
    </div>
    <div class="grid-1 resultsContainer" data-bind="with : gridVM">
        <div data-bind="visible : showAdvancedSearchMessage" style="display: none;">
            @{
                var key = Model.CategoryName + "_AdvancedSearchMessage";
                var text = LanguageUtils.GetGlobalResourceString(key);
                if (text.Equals(key))
                {
                    <br/>
                    <p>Enter your search terms and then select the search button to view your results. You can use stemming, wildcards and proximity to narrow your search.</p>
                    <br/>
                    <p>To add filters, select the left filter/s you require and then select the ‘Apply Filters’ button.</p>
                }
                else
                {
                    @Html.Raw(text)
                }
            }
         
        </div>

        <div id="resultsGrid" data-bind="dynamicHtml : resultsBodyHtml">
        </div>

        <div data-bind="visible: isAppending" style="height: 60px; position: relative">
            <div class="loading"></div>
        </div>
    </div>

    <div class="grid-1 text-center" data-bind="with : paginationVM">
        @Html.Partial("PartialPages/Results/Pagination")
    </div>

    <div class="loading dimmer" data-bind="visible : gridVM.isLoading"></div>
</div>

<div id="chartContextMenu" class="u-border-all dialog width-60 modal-content" data-bind="visible: gridChartVM.viewingChartContextMenu, with: gridChartVM">
    <div class="grey4-bg u-padding-Axxs u-padding-Lm modal-header draggable">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" data-bind="toggleClick: viewingChartContextMenu"><span aria-hidden="true">×</span></button>
        <h3 class="u-margin-An">
            <i class="icon-move small" style="margin-left: -10px;"></i>
            <span id="chartContextTitle"></span>
        </h3>
    </div>
    <div class="dropdown u-inline-block u-padding-Lxxs">
        <br />
        <span>Drill down and change chart segment.</span><br />
        <a id="_defenceSegmentDropdownTitle2" href="#" class="dropdown-toggle" data-toggle="dropdown">
            <span data-bind="text:DefenceSegment().text"></span>
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            <li class="dropdown-submenu">
                <a tabindex="-1" href="#">System Level</a>
                <ul id="_ChangeDefenceSegmentDropdown2" class="dropdown-menu" data-bind="foreach: settings.defenceSegments">
                    <li data-bind="css:{active: $parent.DefenceSegment() == $data}"><a data-bind="attr:{'data-value': key}, text:text, click: $parent.TopTenClicked.bind($data, $parent)" role="menuitem" href="#"></a></li>
                </ul>
            </li>
            <li class="dropdown-submenu" data-bind="css:{disabled: !CustomAttributes().length}">
                <a tabindex="-1" href="#">Custom Attributes</a>
                <ul class="dropdown-menu" data-bind="foreach: CustomAttributes,visible: CustomAttributes().length">
                    <li data-bind="css:{active: $parent.DefenceSegment() == $data}"><a data-bind="attr:{'data-value': key}, text:text, click: $parent.TopTenClicked.bind($data, $parent)" role="menuitem" href="#"></a></li>
                </ul>
            </li>
            <li class="dropdown-submenu" data-bind="css:{disabled: !CustomSegments().length}">
                <a tabindex="-1" href="#">My Customisations</a>
                <ul class="dropdown-menu" data-bind="foreach: CustomSegments,visible: CustomSegments().length">
                    <li data-bind="css:{active: $parent.DefenceSegment() == $data}"><a data-bind="attr:{'data-value': key}, text:text, click: $parent.TopTenClicked.bind($data, $parent)" role="menuitem" href="#"></a></li>
                </ul>
            </li>
        </ul>
    </div>
    <div id="chartContextDropdown" class="u-padding-As">
    </div>
    @*<div class="dropdown u-padding-As">
            <a id="topTenLabel" class="u-padding-Lxxs" onclick="GetTopTenPrograms(); return false;" href="#"></a>
        </div>*@
    <div id="chartContextDropdownSubtitle" class="u-padding-An u-padding-Lm"> </div>
    <div id="topTen">
        <div class="u-padding-As u-padding-Tl">
            Top ten records for
            <div id="topTenData">
                <table class="table">
                    <tbody>
                        <tr><th>Record Id</th><th>Program Name</th><th>Supplier</th><th data-bind="text:currentUnit"> USD</th></tr>
                        <!-- ko foreach: TopTenProgramData -->
                        <tr>
                            <td><span data-bind="text: ItemID"></span></td>
                            <td><span data-bind="text: ITEMNAME"></span></td>
                            <td><span data-bind="text: STD_SUPPLIER"></span></td>
                            <td><span data-bind="text: SERIESVAL"></span></td>
                        </tr>
                        <!-- /ko -->
                        <tr data-bind="visible: !TopTenProgramData().length">
                            <td><span class="loading"></span></td>
                            <td><span></span></td>
                            <td><span></span></td>
                            <td><span></span></td>
                        </tr>
                    </tbody>
                </table>
                <a data-bind="click: RefineProgramData">View Program Data and refine on segment.</a>
            </div>
        </div>
    </div>
</div>