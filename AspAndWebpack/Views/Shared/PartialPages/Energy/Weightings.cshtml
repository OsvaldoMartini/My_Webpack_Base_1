@model IHS.Apps.CMP.Models.ViewModels.Energy.RRWeighting

@using (Html.BeginForm("SaveWeightings", "PEPS", FormMethod.Post, new { id = "WeightingsForm" }))
{
    @Html.AntiForgeryToken()

<ul class="nav nav-tabs">
    @if (!Model.PoliticalOnly)
    {
        <li class="active"><a href="#EP" data-toggle="tab">@string.Format("E&P Activity {0}%", Model.OVR_RecentProspectivity)</a></li>
        <li><a href="#Fiscal" data-toggle="tab">@string.Format("Fiscal Terms {0}%", Model.OVR_FiscalTerms)</a></li>
    }
    <li @(Model.PoliticalOnly ? "class=\"active\"" : string.Empty)><a href="#OGR" data-toggle="tab">@string.Format("Oil and Gas Risk {0}%", Model.POL15_OVERALL)</a></li>
</ul>
<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in @(Model.PoliticalOnly ? "hidden" : string.Empty)" id="EP">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th colspan='2'>
                        PEPS Overall Weighting
                    </th>
                    <th colspan='2'>
                        Section Weighting
                    </th>
                    <th colspan='2'>
                        Value Weighting
                    </th>
                </tr>
            </thead>
            <tr>
                <td rowspan="11">
                    E&P Activity
                </td>
                <td rowspan="11">
                    @Html.TextBoxFor(m => m.OVR_RecentProspectivity, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td rowspan="2">
                    Production
                </td>
                <td rowspan="2">
                    @Html.TextBoxFor(m => m.PRO_ProdLevel, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Oil
                </td>
                <td>
                    @Html.TextBoxFor(m => m.PRO_ProdLevelOil, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Gas
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.PRO_ProdLevelGas, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="2">
                    Reserves
                </td>
                <td class="active" rowspan="2">
                    @Html.TextBoxFor(m => m.PRO_RemRes, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Oil
                </td>
                <td>
                    @Html.TextBoxFor(m => m.PRO_RemResOil, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Gas
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.PRO_RemResGas, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td rowspan="3">
                    Activity
                </td>
                <td rowspan="3">
                    @Html.TextBoxFor(m => m.PRO_Act, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    NFWs
                </td>
                <td>
                    @Html.TextBoxFor(m => m.PRO_ActNFWS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    New Licences
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.PRO_ActNewLicences, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Active Companies
                </td>
                <td>
                    @Html.TextBoxFor(m => m.PRO_ActCompanies, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="4">
                    Success
                </td>
                <td class="active" rowspan="4">
                    @Html.TextBoxFor(m => m.PRO_Suc, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Oil Added
                </td>
                <td>
                    @Html.TextBoxFor(m => m.PRO_SucOilResAdded, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Gas Added
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.PRO_SucGasResAdded, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Success Rate
                </td>
                <td>
                    @Html.TextBoxFor(m => m.PRO_SucSuccRate, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Added/NFW
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.PRO_SucResAddNFW, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
        </table>


    </div>
    <div class="tab-pane fade @(Model.PoliticalOnly ? "hidden" : string.Empty)" id="Fiscal">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th colspan='2'>
                        PEPS Overall Weighting
                    </th>
                    <th colspan='2'>
                        Section Weighting
                    </th>
                    <th colspan='2'>
                        Value Weighting
                    </th>
                </tr>
            </thead>
            <tr>
                <td rowspan="24">
                    Fiscal Terms
                </td>
                <td rowspan="24">
                    @Html.TextBoxFor(m => m.OVR_FiscalTerms, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td rowspan="3">
                    State Take @@ 0%
                </td>
                <td rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_UnDisStateTake, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Marginal
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisStateTakeMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Economic
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_UnDisStateTakeECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisStateTakeUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="3">
                    Government Take @@ 0%
                </td>
                <td class="active" rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_UnDisGovTake, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Marginal
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisGovTakeMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Economic
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_UnDisGovTakeECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisGovTakeUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td rowspan="3">
                    Investor NPV @@ 12.5% ($/bbl)
                </td>
                <td rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_NPV125BBL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Marginal
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_NPV125BBLMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Economic
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_NPV125BBLECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_NPV125BBLUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="3">
                    Investor NPV @@ 0% ($/bbl)
                </td>
                <td class="active" rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVBBL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Economic
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVBBLECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Marginal
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVBBLMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVBBLUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td rowspan="3">
                    Investor IRR
                </td>
                <td rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_IRR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Marginal
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_IRRMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Economic
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_IRRECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_IRRUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="3">
                    Investor NPV @@ 12.5% ($mm)
                </td>
                <td class="active" rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_NPV125MM, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Marginal
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_NPV125MMMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Economic
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_NPV125MMECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_NPV125MMUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td rowspan="3">
                    Investor NPV @@ 0% ($mm)
                </td>
                <td rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVMM, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Marginal
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVMMMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Economic
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVMMECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_UnDisNPVMMUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="3">
                    Investor P/I Ratio
                </td>
                <td class="active" rowspan="3">
                    @Html.TextBoxFor(m => m.FIS_PIRatio, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    Marginal
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_PIRatioMAR, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Economic
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.FIS_PIRatioECO, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>
                    Upside
                </td>
                <td>
                    @Html.TextBoxFor(m => m.FIS_PIRatioUPS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
        </table>
    </div>
    <div class="tab-pane fade @(Model.PoliticalOnly ? "active in" : string.Empty)" id="OGR">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th colspan='2' @(Model.PoliticalOnly ? "class=hidden" : string.Empty)>
                        PEPS Overall Weighting
                    </th>
                    <th colspan='2'>
                        Section Weighting
                    </th>
                    <th colspan='2'>
                        Value Weighting
                    </th>
                </tr>
            </thead>
            <tr>
                <td rowspan="21" @(Model.PoliticalOnly ? "class=hidden" : string.Empty)>
                    Oil and Gas Risk
                </td>
                <td rowspan="21" @(Model.PoliticalOnly ? "class=hidden" : string.Empty)>
                    @Html.TextBoxFor(m => m.POL15_OVERALL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td rowspan="4">
                    Politics
                </td>
                <td rowspan="4">
                    @Html.TextBoxFor(m => m.POL15_POLITICS_OVERALL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>
                    State Capacity
                </td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_POLITICS_STATECAPACITY, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">
                    Political Legitimacy
                </td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_POLITICS_POLITICALLEGITIMACY, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>Political Violence</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_POLITICS_POLITICALVIOLENCE, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">Geopolitical Risk</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_POLITICS_GEOPOLITICALRISK, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="4">Economics</td>
                <td class="active" rowspan="4">
                    @Html.TextBoxFor(m => m.POL15_ECONOMICS_OVERALL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>Transfer Risk</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_ECONOMICS_TRANSFERRISK, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">Primary Fiscal Balance</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_ECONOMICS_PRIMARYFISCALBALANCE, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>Real Per Capita GDP Growth</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_ECONOMICS_REALPERCAPITAGDPGROWTH, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">Level of Development</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_ECONOMICS_LEVELOFDEVELOPMENT, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td rowspan="4">Hydrocarbon Sector Entry</td>
                <td rowspan="4">
                    @Html.TextBoxFor(m => m.POL15_HCSCENTRY_OVERALL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>International Openness</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_HCSCENTRY_INTERNATIONALOPENNESS, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">Government Take</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_HCSCENTRY_GOVERNMENTTAKE, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>Expeditiousness of Contract</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_HCSCENTRY_EXPEDITIOUSNESSOFCONTRACT, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">State/NOC Role</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_HCSCENTRY_STATENOCROLE, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active" rowspan="5">Hydrocarbon Sector Operations</td>
                <td class="active" rowspan="5">
                    @Html.TextBoxFor(m => m.POL15_HCSCOPERATIONS_OVERALL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td>Sanctity of Contract</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_HCSCOPERATIONS_SANCTITYOFCONTRACT, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">Regulatory Burden</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_HCSCOPERATIONS_REGULATORYBURDEN, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>Civil Society Risk</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_HCSCOPERATIONS_CIVILSOCIETYRISK, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">Corruption</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_HCSCOPERATIONS_CORRUPTION, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>Rule of Law</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_HCSCOPERATIONS_RULEOFLAW, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>

            <tr>
                <td rowspan="4">Hydrocarbon Sector Shocks</td>
                <td rowspan="4">
                    @Html.TextBoxFor(m => m.POL15_HCSCSHOCKS_OVERALL, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
                <td class="active">Export Risk</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_HCSCSHOCKS_EXPORTRISK, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>Facility and Personnel Violence</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_HCSCSHOCKS_FACILITYANDPERSONNELVIOLENCE, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td class="active">Ministerial/Policy Volatility</td>
                <td class="active">
                    @Html.TextBoxFor(m => m.POL15_HCSCSHOCKS_MINISTERIALPOLICYVOLATILITY, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
            <tr>
                <td>Labor Unrest</td>
                <td>
                    @Html.TextBoxFor(m => m.POL15_HCSCSHOCKS_LABORUNREST, new { type = "number", min = "0", max = "100", maxlength = "3", @class = "form-control input-sm", autocomplete = "off" })
                </td>
            </tr>
        </table>
    </div>
</div>

<button class="btn btn-primary" type="button" onclick="SaveWeighting();">Save</button>
<button class="btn btn-primary" type="button" onclick="RestoreDefaults();">Restore IHS Markit Defaults</button>
<button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
}

<script language="javascript" type="text/javascript">
	<!--
		var arytest = new Array();
		var aryprompt = new Array();
		var optcount;
		var mvcPrefix = "@(Model.PoliticalOnly ? "OilAndGasRiskRankings" : "RatingsAndRankings")";

		@if (Model.PoliticalOnly)
        {
		    @:arytest[0] = "parseFloat(document.forms[0].POL15_POLITICS_STATECAPACITY.value) + parseFloat(document.forms[0].POL15_POLITICS_POLITICALLEGITIMACY.value) + parseFloat(document.forms[0].POL15_POLITICS_POLITICALVIOLENCE.value) + parseFloat(document.forms[0].POL15_POLITICS_GEOPOLITICALRISK.value)";
		    @:aryprompt[0] = "Politics";
		    @:arytest[1] = "parseFloat(document.forms[0].POL15_ECONOMICS_TRANSFERRISK.value) + parseFloat(document.forms[0].POL15_ECONOMICS_PRIMARYFISCALBALANCE.value) + parseFloat(document.forms[0].POL15_ECONOMICS_REALPERCAPITAGDPGROWTH.value) + parseFloat(document.forms[0].POL15_ECONOMICS_LEVELOFDEVELOPMENT.value)";
		    @:aryprompt[1] = "Economics";
		    @:arytest[2] = "parseFloat(document.forms[0].POL15_HCSCENTRY_INTERNATIONALOPENNESS.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_GOVERNMENTTAKE.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_EXPEDITIOUSNESSOFCONTRACT.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_STATENOCROLE.value)";
		    @:aryprompt[2] = "Hydrocarbon Sector Entry";
		    @:arytest[3] = "parseFloat(document.forms[0].POL15_HCSCOPERATIONS_SANCTITYOFCONTRACT.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_REGULATORYBURDEN.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_CIVILSOCIETYRISK.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_CORRUPTION.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_RULEOFLAW.value)";
		    @:aryprompt[3] = "Hydrocarbon Sector Operations";
		    @:arytest[4] = "parseFloat(document.forms[0].POL15_HCSCSHOCKS_EXPORTRISK.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_FACILITYANDPERSONNELVIOLENCE.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_MINISTERIALPOLICYVOLATILITY.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_LABORUNREST.value)";
		    @:aryprompt[4] = "Hydrocarbon Sector Shocks";
		    @:arytest[5] = "parseFloat(document.forms[0].POL15_POLITICS_OVERALL.value) + parseFloat(document.forms[0].POL15_ECONOMICS_OVERALL.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_OVERALL.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_OVERALL.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_OVERALL.value)";
		    @:aryprompt[5] = "Political Risk";
		    @:optcount = 6;
		}
		else
        {
		    @:arytest[0] = "parseFloat(document.forms[0].PRO_ProdLevelOil.value) + parseFloat(document.forms[0].PRO_ProdLevelGas.value)";
		    @:aryprompt[0] = "Production";
		    @:arytest[1] = "parseFloat(document.forms[0].PRO_RemResOil.value) + parseFloat(document.forms[0].PRO_RemResGas.value)";
		    @:aryprompt[1] = "Reserves";
		    @:arytest[2] = "parseFloat(document.forms[0].PRO_ActNFWS.value) + parseFloat(document.forms[0].PRO_ActNewLicences.value) + parseFloat(document.forms[0].PRO_ActCompanies.value)";
		    @:aryprompt[2] = "Activity";
		    @:arytest[3] = "parseFloat(document.forms[0].PRO_SucOilResAdded.value) + parseFloat(document.forms[0].PRO_SucGasResAdded.value) + parseFloat(document.forms[0].PRO_SucSuccRate.value) + parseFloat(document.forms[0].PRO_SucResAddNFW.value)";
		    @:aryprompt[3] = "Sub Section Success";
		    @:arytest[4] = "parseFloat(document.forms[0].PRO_ProdLevel.value) + parseFloat(document.forms[0].PRO_RemRes.value) + parseFloat(document.forms[0].PRO_Act.value) + parseFloat(document.forms[0].PRO_Suc.value)";
		    @:aryprompt[4] = "Section E&P Activity";
		    @:arytest[5] = "parseFloat(document.forms[0].FIS_UnDisStateTakeMAR.value) + parseFloat(document.forms[0].FIS_UnDisStateTakeECO.value) + parseFloat(document.forms[0].FIS_UnDisStateTakeUPS.value)";
		    @:aryprompt[5] = "State Take @@ 0%";
		    @:arytest[6] = "parseFloat(document.forms[0].FIS_UnDisGovTakeMAR.value) + parseFloat(document.forms[0].FIS_UnDisGovTakeECO.value) + parseFloat(document.forms[0].FIS_UnDisGovTakeUPS.value)";
		    @:aryprompt[6] = "Government Take @@ 0%";
		    @:arytest[7] = "parseFloat(document.forms[0].FIS_NPV125BBLMAR.value) + parseFloat(document.forms[0].FIS_NPV125BBLECO.value) + parseFloat(document.forms[0].FIS_NPV125BBLUPS.value)";
		    @:aryprompt[7] = "Investor NPV @@ 12.5% ($/bbl)";
		    @:arytest[8] = "parseFloat(document.forms[0].FIS_UnDisNPVBBLECO.value) + parseFloat(document.forms[0].FIS_UnDisNPVBBLMAR.value) + parseFloat(document.forms[0].FIS_UnDisNPVBBLUPS.value)";
		    @:aryprompt[8] = "Investor NPV @@ 0% ($/bbl)";
		    @:arytest[9] = "parseFloat(document.forms[0].FIS_IRRMAR.value) + parseFloat(document.forms[0].FIS_IRRECO.value) + parseFloat(document.forms[0].FIS_IRRUPS.value)";
		    @:aryprompt[9] = "Investor IRR";
		    @:arytest[10] = "parseFloat(document.forms[0].FIS_NPV125MMMAR.value) + parseFloat(document.forms[0].FIS_NPV125MMECO.value) + parseFloat(document.forms[0].FIS_NPV125MMUPS.value)";
		    @:aryprompt[10] = "Investor NPV @@ 12.5% ($mm)";
		    @:arytest[11] = "parseFloat(document.forms[0].FIS_UnDisNPVMMMAR.value) + parseFloat(document.forms[0].FIS_UnDisNPVMMECO.value) + parseFloat(document.forms[0].FIS_UnDisNPVMMUPS.value)";
		    @:aryprompt[11] = "Investor NPV @@ 0% ($mm)";
		    @:arytest[12] = "parseFloat(document.forms[0].FIS_PIRatioMAR.value) + parseFloat(document.forms[0].FIS_PIRatioECO.value) + parseFloat(document.forms[0].FIS_PIRatioUPS.value)";
		    @:aryprompt[12] = "Sub Section Investor P/I RATIO";
		    @:arytest[13] = "parseFloat(document.forms[0].FIS_UnDisStateTake.value) + parseFloat(document.forms[0].FIS_UnDisGovTake.value) + parseFloat(document.forms[0].FIS_NPV125BBL.value) + parseFloat(document.forms[0].FIS_UnDisNPVBBL.value) + parseFloat(document.forms[0].FIS_IRR.value) + parseFloat(document.forms[0].FIS_NPV125MM.value) + parseFloat(document.forms[0].FIS_UnDisNPVMM.value) + parseFloat(document.forms[0].FIS_PIRatio.value)";
		    @:aryprompt[13] = "Section Fiscal Terms";
		    @:arytest[14] = "parseFloat(document.forms[0].POL15_POLITICS_STATECAPACITY.value) + parseFloat(document.forms[0].POL15_POLITICS_POLITICALLEGITIMACY.value) + parseFloat(document.forms[0].POL15_POLITICS_POLITICALVIOLENCE.value) + parseFloat(document.forms[0].POL15_POLITICS_GEOPOLITICALRISK.value)";
		    @:aryprompt[14] = "Politics";
		    @:arytest[15] = "parseFloat(document.forms[0].POL15_ECONOMICS_TRANSFERRISK.value) + parseFloat(document.forms[0].POL15_ECONOMICS_PRIMARYFISCALBALANCE.value) + parseFloat(document.forms[0].POL15_ECONOMICS_REALPERCAPITAGDPGROWTH.value) + parseFloat(document.forms[0].POL15_ECONOMICS_LEVELOFDEVELOPMENT.value)";
		    @:aryprompt[15] = "Economics";
		    @:arytest[16] = "parseFloat(document.forms[0].OVR_RecentProspectivity.value) + parseFloat(document.forms[0].OVR_FiscalTerms.value) + parseFloat(document.forms[0].POL15_OVERALL.value)";
		    @:aryprompt[16] = "PEPS Overall";
		    @:arytest[17] = "parseFloat(document.forms[0].POL15_HCSCENTRY_INTERNATIONALOPENNESS.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_GOVERNMENTTAKE.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_EXPEDITIOUSNESSOFCONTRACT.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_STATENOCROLE.value)";
		    @:aryprompt[17] = "Hydrocarbon Sector Entry";
		    @:arytest[18] = "parseFloat(document.forms[0].POL15_HCSCOPERATIONS_SANCTITYOFCONTRACT.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_REGULATORYBURDEN.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_CIVILSOCIETYRISK.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_CORRUPTION.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_RULEOFLAW.value)";
		    @:aryprompt[18] = "Hydrocarbon Sector Operations";
		    @:arytest[19] = "parseFloat(document.forms[0].POL15_HCSCSHOCKS_EXPORTRISK.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_FACILITYANDPERSONNELVIOLENCE.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_MINISTERIALPOLICYVOLATILITY.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_LABORUNREST.value)";
		    @:aryprompt[19] = "Hydrocarbon Sector Shocks";
		    @:arytest[20] = "parseFloat(document.forms[0].POL15_POLITICS_OVERALL.value) + parseFloat(document.forms[0].POL15_ECONOMICS_OVERALL.value) + parseFloat(document.forms[0].POL15_HCSCENTRY_OVERALL.value) + parseFloat(document.forms[0].POL15_HCSCOPERATIONS_OVERALL.value) + parseFloat(document.forms[0].POL15_HCSCSHOCKS_OVERALL.value)";
		    @:aryprompt[20] = "Politics Risk";
		    @:optcount = 21;
    }

	function SaveWeighting()
	{
	    if (validate()) {
	        $.ajax({
	            url: "/" + mvcPrefix + "/SaveWeightings",
	            type: 'POST',
	            data: $('#WeightingsForm').serialize()
	        }).done(function (data) {
	            $("#generalDialog").modal('hide');
	            //ReloadWeightings();
	        }).fail(function () {
	            showPopup("Save Weightings", "Something has gone wrong!");
	        });
	    }
	}

	function RestoreDefaults()
	{
		$.ajax({
		    url: "/" + mvcPrefix + "/RestoreWeightings",
		}).done(function (data) {
		    $("#generalDialog").modal('hide');
		    //ReloadWeightings();
		}).fail(function () {
		    showPopup("Restore Weightings", "Something has gone wrong!");
		});
	}

    function ReloadWeightings()
    {
        vm.commandsVM.loadPopup("Edit Weightings", "/" + mvcPrefix + "/GetWeightings", {}, null, function (form) { window.location.reload(); });
    }

	function validate() {
		var strmsg = "";

		var textboxes = $('input.form-control');
		textboxes.each(function () {
		    if (isNaN(this.value)) {
		        strmsg = "Please make sure all values are numeric only. Correct the problem and try again.";
		        return false;
		    }
		}
        );
		if (strmsg !== "") {
		    alert(strmsg);
		    return false;
		}

		for (ii = 0; ii < optcount; ii++) {
		    eval("var dbltest = " + arytest[ii] + ";");
		    if (dbltest != 100) {
		        strmsg = strmsg + "The values for " + aryprompt[ii] + " add up to " + dbltest + "% instead of 100%\n";
		    }
		}
		if (strmsg == "") {
		    return true;
		}
		else {
		    alert(strmsg);
		    return false;
		}
	}

	// -->
</script>

