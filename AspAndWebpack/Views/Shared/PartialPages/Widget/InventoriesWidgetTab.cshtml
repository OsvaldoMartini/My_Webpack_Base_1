@using System.Web.Script.Serialization
@model IHS.Apps.CMP.Models.ViewModels.AandD.InventoriesModel

@{
    var colours = new[]
    {
        "rgb(0,171,78)",
        "rgb(0,150,151)",
        "rgb(141,198,63)",
        "rgb(0,181,241)",
        "rgb(247,148,29)",
        "rgb(150,21,124)",
        "rgb(250,191,183)",
        "rgb(238,47,83)",
        "rgb(182,228,250)",
        "rgb(0,102,179)"
    };

    var maxCount = Model.Items.Count() == 0 ? 1 : Model.Items.Max(i => i.Count);
    var types = Model.Items.Where(i => i.Count > 0).Select(i => i.Type).Distinct().ToList();
    var widgetObj = "a" + CmpHtmlHelpers.CreateUniqueId("dvInventoriesTab").Replace("-","_");
    var serializer = new JavaScriptSerializer { MaxJsonLength = Int32.MaxValue };

}
<script>

    var @widgetObj = new inventoriesWidget(@Html.Raw(serializer.Serialize(Model)));
    ko.applyBindings(@widgetObj, document.getElementById("@widgetObj"));
    console.log('@widgetObj', @widgetObj);
</script>
<div data-bind="with:@widgetObj" id="@widgetObj">
    <div class="grid">
        <div class="grid-1-2"><div class="input-group"><input class="form-control" placeholder="Filter by name." data-bind="textInput: search" aria-label="Filter inventory" /><span class="input-group-addon"><i class="icon-search"></i></span></div></div>
        <div class="grid-1-2"><select data-placeholder="Filter by type." data-bind="options:typeFilters, selectedOptions: typeFilter, chosen:{width: '100%'}" style="width:100%;" multiple><option value=""></option></select></div>
    </div>

    <div style="max-height: 300px; max-height:30vh;height:100%; overflow-y:auto;">
        <table class="table">
            <tbody data-bind="foreach: data">
            <tr class="text-middle" data-bind="toggleClick: showTable, visible:$root.doSearch($data)">
                <td><button class="icon-" data-bind="toggleClick: showTable,css:{'icon-down-dir':!showTable(),'icon-up-dir':showTable}"></button></td>
                <td data-bind="text: Title"></td>
                <td>
                    <!-- ko foreach: Segmentation -->
                    <svg viewBox="0 0 100 100" data-bind="attr:{width: Math.max(1, 88 * Count / $root.maxCount()) + '%'}" height="15" preserveAspectRatio="none" class="inline-img">
                        <rect fill="rgb(0,150,151)" width="100" x="0" height="100%"></rect>
                    </svg>
                    <!-- /ko -->
                    <span data-bind="text:Count"></span>
                </td>
            </tr>
            <tr data-bind="if: showTable">
                <td colspan="3" data-bind="foreach: Items">
                    <table class="table table-condensed">
                        <tbody data-bind="foreach: Object.keys(Table)">
                            <tr data-bind="if:$root.labels[$data]">
                                <th data-bind="text: $root.labels[$data]"></th>
                                <td>
                                    <div data-bind="if: Array.isArray($parent.Table[$data])" >
                                    <ul data-bind="foreach: $parent.Table[$data]">
                                        <li>
                                            <span data-bind="if: Array.isArray($data)">
                                            <a href="" data-bind="attr:{href: '/DefenceEquipment/Display/' + $data[0] }, text: $data[1]"></a>
                                            </span>
                                            <span data-bind="ifnot: Array.isArray($data)">
                                            <span data-bind="text: $data"></span>
                                            </span>
                                        </li>
                                    </ul>
                                    </div>
                                    <div data-bind="ifnot: Array.isArray($parent.Table[$data]) ">
                                        <span data-bind="text: $parent.Table[$data]"></span>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>
            <tbody>
        </table>
    </div>

    @*<div style="display:flex;justify-content:space-between;flex-flow: row wrap;" class="u-margin-Vxs">
        @for (int i = 0; i < types.Count(); i++)
        {
            <span class="text-nowrap">
                <svg viewBox="0 0 15 15" height="15" width="15" class="inline-img"><rect fill="@(colours.ElementAt(i))" width="15" height="15"></rect></svg>
                @types[i]
            </span>
        }
    </div>*@

    @if (Model.FooterLinks != null)
    {
        @Html.Partial("Widget/LinkListWidgetFooter", Model.FooterLinks)
    }
</div>