@model IHS.Apps.CMP.Models.ViewModels.FilterObjects

@{
    var mainId = CmpHtmlHelpers.CreateUniqueId("div");
    var containerId = CmpHtmlHelpers.CreateUniqueId("div").Replace('-', '_');
}
<div id="@mainId">
    @if (Model.Filters != null && Model.Filters.Count() > 0)
    {        
        <script>
            var onFilterChange_@(containerId) = function (filterIds) {
                var url = "@Html.Raw(Model.ActionUrl)";
                var opts = $(filterIds);
                var autocomplete = {};
                for (var i = 0; i < opts.length; i++) {
                    var opt = $(opts[i]);
                    if (!opt.val()) { continue;}
                    url += "&" + opt.data('index') + "=" + encodeURIComponent(opt.val());

                    var autocomp = opt.data('loadOptions');
                    if(autocomp){
                        autocomplete = {
                            done: autocomp,
                            index: opt.data('index'),
                            always: opt.data('loadedOptions')
                        };
                    }
                }

                if (autocomplete.done) {
                    url += "&autocomplete=" + autocomplete.index;
                    $.ajax({
                        method: 'POST',
                        url: url,
                        success: autocomplete.done,
                        complete: autocomplete.always || function () { }
                    });
                    return;
                }

                $('#@(containerId)load').show();

                $('#@containerId').load(url, function () {
                    $('#@(containerId)load').hide();
                });
            };
        </script>

        @Html.Partial("Widget/Filters", new Tuple<IEnumerable<IHS.Apps.CMP.Models.ViewModels.FilterVM>, string>(Model.Filters, "onFilterChange_" + containerId))
    }
    <div id="@containerId">

        @Html.Partial(Model.SubView, Model.Object)
    </div>
    <div id="@(containerId)load" class="loading dimmer" style="display: none;"></div>

    @if (Model.Links != null)
    {
        @Html.Partial("Widget/LinkListWidgetFooter", Model.Links)
    }
</div>

