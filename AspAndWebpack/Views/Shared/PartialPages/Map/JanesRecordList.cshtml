@model System.Collections.Generic.IEnumerable<IHS.Apps.CMP.Models.ViewModels.Map.Markers.MapMarker>

@{
    var containerId = CmpHtmlHelpers.CreateUniqueId("JanesRecordList");
}

<ul id="@containerId" class="list-group list-group-sm">
    @foreach (var marker in Model.OrderByDescending(p => p.EventDate))
    {
        var idPopupDetail = CmpHtmlHelpers.CreateUniqueId("popupDetail");

        var hasDescription = !string.IsNullOrEmpty(marker.Description);

        var link = Url.RouteUrl("CategoryRoute", new { category = "Janes", action = "Display", id = marker.Id });

        var hasImages = !string.IsNullOrEmpty(marker.Thumbnail);

        <div class="news u-font-85 u-padding-Axxs u-border-bottom MapPopupHighlightPoint grid">
            <div class="@(hasImages ? "grid-2-3" : "grid-1-1")">
                <a href="@link" target="_blank">
                    @Html.Raw(string.IsNullOrWhiteSpace(marker.Title) ? marker.Type : marker.Title)
                    @if (hasDescription)
                    {
                        <i onclick="$(event.target).toggleClass('on'); return false;" class="icon-down-dir hand" data-toggle="collapse" href="#@idPopupDetail" aria-expanded="false"></i>
                    }
                </a>
            </div>

            @{
                if (hasImages)
                {
                    <div class="grid-1-3 text-center">
                        <div class="thumbnail" align="center" data-record-uid="@marker.Id">
                            <a href="@("/ExternalItems/Janes" + marker.Thumbnail)">
                                <img src="@("/ExternalItems/Janes" + marker.Thumbnail)" />
                            </a>
                        </div>
                    </div>
                }
            }


            <div class="grid-1-1">

                @if (hasDescription)
                {
                    var longLat = marker.Longitude + "," + marker.Latitude;

                    <p class="collapse" id="@idPopupDetail">
                        <span class="text-muted">@marker.Description</span>
                        <br>

                        <span class="text-muted">@longLat</span>
                        <br>
                    </p>
                }

                @if (marker.EventDate != DateTime.MinValue)
                {
                    var dateString = marker.EventDate.ToShortDateString() + " " + marker.EventDate.ToShortTimeString();
                    <span class="date">@dateString</span>
                }
            </div>
        </div>
                }
</ul>