@model IHS.Apps.CMP.Models.ViewModels.ResultTemplatesModel


@if (Model.Templates != null && Model.Templates.Count() > 1)
{
    var displayTemplateName = (string.IsNullOrEmpty(Model.SelectedTemplateKey)) ? "Grid View" : Model.SelectedTemplateKey;
<a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0)" aria-expanded="true">Display: <span data-bind="text: template" class="text">@displayTemplateName</span> <span class="caret"></span></a>
<ul class="dropdown-menu" id="user-grid-views" style="max-height: 400px; height: auto; overflow-x: hidden;">

    @{
        foreach (var template in Model.Templates)
        {
            var templateName = this.LocalResources(template.name);
            var attributeSafeTemplateName = templateName.Replace(" ", "_");
            <li id="template_@attributeSafeTemplateName">
                @{
                    string className = string.IsNullOrEmpty(template.icon_class) ? "icon-blank" : template.icon_class;
                }
                <a href="#" data-grid-template='@HttpUtility.UrlEncode(template.name)' data-bind="click:applyTemplate"><i class="@className"></i> @templateName</a>
            </li>
        }

        if (Model.AllowCustomViewEdit)
        {
            <li class="editCustomView">

                <a href="javascript:void(0)" data-grid-template='EditCustomView' data-bind="click:editCustomView">Edit Custom Views</a>
            </li>
        }
    }

</ul>
}
