@{
    ViewBag.Title = "Map";
    Layout = "~/Views/Shared/_LayoutWithFilter.cshtml";
}

@using IHS.Apps.CMP.Models
@model IHS.Apps.CMP.Models.ViewModels.MapPageModel

@section page_title
{

}

@section additional_css
{
    <link rel="stylesheet" href="https://js.arcgis.com/3.22/dijit/themes/claro/claro.css">
    <link rel="stylesheet" href="https://js.arcgis.com/3.22/esri/css/esri.css">
    @Styles.Render("~/Content/results")
    @Styles.Render("~/Content/map")
}

@section additional_scripts
{
    @Scripts.Render("~/bundles/results")
    @Scripts.Render("~/bundles/map")
    <script type="text/javascript">
        var _mapPageVM;
        var pageLoadZoomLevel = 1;

        var dojoConfig = {
            isDebug: true,
            paths: { extras: "Assets/Javascript/" }
        }

        var containerId = 'container';

    </script>

    <script type="text/javascript">
        $(document)
            .ready(function() {

                var loader = new DynamicLoader();
                loader.loadScript("https://js.arcgis.com/3.22/init.js")
                    .success(function() {

                        var mapId = "map";
                        var headerHeight = $("header").height() + $("footer").height();
                        //15 is the size of the br
                        $('#' + mapId).css('height', winHeight - headerHeight);

                        var disableAggregation = @Json.Encode(Model.DisableAggregation);
                        var highFidelity = @Json.Encode(Model.HighFidelity);
                        var sharedUser = @Json.Encode(Model.IsSharedUser);

                        if (sharedUser) {
                            if (window.UserSettings) {
                                disableAggregation = UserSettings.getCookie("MapDisableAggregation", "mapDisableAggregation") === "true";
                                highFidelity = UserSettings.getCookie("MapHighFidelity", "mapHighFidelity");
                            }
                        }

                        var options = {
                            facetsVM: false,
                            searchbox: true,
                            overviewMap: true,
                            disableAggregation : disableAggregation,
                            highFidelity : highFidelity
                        }

                        MapPageVM.initialise(mapId, function(mapPageVm) { _mapPageVM = mapPageVm; }, options);

                        //htmltocanvas
                        $(".js-btn-export[data-image=\"png\"]")
                            .on("click",
                            function (event) {
                                event.preventDefault();
                                @if(Request.Browser.Type.ToUpper().Contains("INTERNETEXPLORER"))
                                {
                                    <text>window.ShowInfo("Due to restrictions in Internet Explorer and Edge browsers, exporting to an image is not available. If you have the Chrome or Firefox browser installed you can export the image."); </text>
                                }
                                else
                                {
                                <text>_mapPageVM.print(event.currentTarget);</text>
                                }
                            });
                        $(".js-btn-export[data-image=\"gif\"]")
                            .on("click",
                            function (event) {
                                event.preventDefault();
                                @if(Request.Browser.Type.ToUpper().Contains("INTERNETEXPLORER"))
                                {
                                    <text>window.ShowInfo("Due to restrictions in Internet Explorer and Edge browsers, exporting to an image is not available. If you have the Chrome or Firefox browser installed you can export the image."); </text>
                                }
                                else
                                {
                                <text >_mapPageVM.mapPrinter.gif = null;
                                _mapPageVM.temporalSlider.record(function (pc, then) {
                                    _mapPageVM.mapPrinter.capture(pc, then);
                                }, function () {
                                    _mapPageVM.mapPrinter.createGif();
                                }); </text>
                                }
                            });
                    });
            });
            keyActions['j + l'] = {
                title: 'Layers',
                action:  function(){
                    $('#layers_tab_link a').focus().click();
                }
            };
            keyActions['j + c'] = null;
            keyActions['j + s'].test = false;
            keyActions['j + m'] = {
                title: 'Map',
                action: "#map_container",
                test: '#map'
            };
            keyActions['j + f'].action = function(){
                $('#filters_tab_link a').focus().click();
            };
            var jt = {
                title: "Top of page",
                action: keyActions['j + t'].action
            };
            delete keyActions['j + t'];
            keyActions['j + t'] = jt;
    </script>

    @Html.Partial("Map/InlineIcons")
    <script src="~/Assets/Javascript/Plugins/gif.js"></script>
}


@section filters
{
    <div class="filter-inner-outer">
        <div class="filter-inner">

            <div class="h3 u-margin-Bs u-margin-Tn" data-bind="text: temporalSlider.dateRangeLabel"></div>

            @if (Model.Breadcrumb != null)
            {
                Html.Partial("LinkBreadCrumb", Model.Breadcrumb);
            }

            <div data-bind="with: searchBarVM">
                <div data-bind="visible: appliedSearches().length > 1" class="appliedFilters panel panel-default relative u-padding-Vn u-padding-Hs" style="display: none">
                    <h4>Current Searches <button data-bind="click : clearAppliedSearches">Clear All</button></h4>

                    <div data-bind="foreach : appliedSearches">
                        <p>
                            <span data-bind="text : title + ' - ' + value"></span>
                            <span data-bind="click : $parent.clearAppliedSearch.bind($parent, $data)" class="remove" title="Clear search">×</span>
                        </p>
                    </div>
                </div>
            </div>

            <ul class="nav nav-tabs nav-justified nav-tabs-small">
                <li id="layers_tab_link" class="active"><a href="#layers_tab" data-toggle="tab">Layers</a></li>
                <li id="filters_tab_link"><a href="#filters_tab" data-toggle="tab">Filters</a></li>
            </ul>

            <div class="tab-content">
                <div class="tab-pane fade in" id="filters_tab" data-bind="with : LayerManagerVM">

                    <select class="form-control" data-bind="options : layersWithFacets, value : activeFacetVM, optionsValue : 'facets', optionsText : 'title', optionsCaption : 'Select a layer', disable:layersWithFacets().length == 0 "></select>

                    <div data-bind="if : activeFacetVM">
                        <div data-bind="with : activeFacetVM">
                            @Html.Partial("Results/Facets/FacetsPanel")
                        </div>
                    </div>
                    <!-- ko if: layersWithFacets().length == 0 -->
                    <div>
                        <br/>
                        <div class="alert alert-danger" role="alert">
                            <p>A layer must first be selected before filtering can be used. </p>
                        </div>
                    </div>
                    <!-- /ko -->
                    <!-- ko if: layersWithFacets().length > 0 -->
                    <div data-bind="ifnot : activeFacetVM">
                        <br/>
                        <div class="alert alert-info" role="alert">
                            <p>Please select a layer to filter by.</p>
                            <p>
                                Either by the drop down above, or by clicking the <i class="icon-filter"></i> icon within the "Map Layers" tab.
                            </p>
                        </div>
                    </div>
                    <!-- /ko -->
                </div>
                <div class="tab-pane fade active in" id="layers_tab">
                    <div id="filtersClone"></div>
                    <!-- ko with: LayerManagerVM -->
                    <div data-bind="foreach: LayersHierachy">
                        <!-- ko template: 'template-layer-list-item' -->
                        <!-- /ko -->
                    </div>
                    <!-- /ko -->
                </div>
            </div>
        </div>
    </div>
    <!-- ===================== FACET TREE ====================== -->

    <div class="none" data-bind="stopBindingChildren : true">

        <div id="template-facet-layer">
            <input type="checkbox" data-bind="checked : isSelected, attr:{ id : facetClientId, name : facetClientId, 'aria-label':displayText, value: value }">
            <label data-bind="attr:{ 'for' : facetClientId }"></label>
            <a href="javascript:void(0)" data-bind="click :  toggleSelected">
                <span data-bind="html: icon" style="max-width: 20px; max-height: 20px; width: 20px;"></span>
                <span data-bind="text : displayText"></span>
            </a>
        </div>
        <div id="template-facet-layer-tree">
            <input type="checkbox" class="mapLayerTree" data-bind="checked : isSelected, attr:{ id : facetClientId, name : facetClientId, 'aria-label':displayText, value: value }">
            <label data-bind="attr:{ 'for' : facetClientId }"></label>

            <a href="javascript:void(0)" data-bind="toggleClick :  isSelected">
                <span data-bind="text : displayText"></span>
            </a>

            <span data-bind="visible: isLoading" class="loading sm"></span>
            <!-- ko if: children().length > 0 -->
            <ul class="list-unstyled filter filter-layers" data-bind="foreach: children">
                <li data-bind="template:  ($data.children && $data.children().length && 'template-facet-layer-tree')||'template-facet-layer'"></li>
            </ul>
            <!-- /ko -->
        </div>
        <div id="template-layer-list-item">
            <label class="show filter filter-layers">
                <img class="u-margin-Bxs" data-bind="attr :{ src: icon}" style="width: 20px;"/>
                <input type="checkbox" class="checkbox" data-bind="checked: isVisible, uniqueId:true"/>
                <label data-bind="uniqueFor:'after',css:{'icon-collapse-arrow':!id}"></label>
                <span data-bind="text : title">Layer:</span>
                <span data-bind="if:hasFacets && $parent.type != layerTypeEnum.Combined">
                    <button class="icon-filter hand" data-bind="click : getFacetsVM, visible : isVisible" title="Show filters"></button>
                </span>
                <span data-bind="if:hasPopover">
                    <button class="icon-cog hand" data-bind="visible : isVisible, popover:{title:title,'content':popover.bind($data),closeable:true, onShow:popoverOnShow, onHide:popoverOnHide}" title="Show layer settings"></button>
                </span>
                <span data-bind="if:help&&help.App&&help.Group&&help.Item">
                    <button class="icon-help-circled hand grey2 u-margin-Ls"
                            data-bind="click:showHelp, visible : isVisible" data-toggle="modal" data-target="#helpIndicatorDialog" title="Show help"></button>
                </span>
                <br/>
            </label>
            <div class="u-margin-Lm" data-bind="visible: isVisible() || options.facetsVisible, css: { 'checkboxes': subLayers().length }, template: 'template-layer-description'"></div>
        </div>
        <div id="template-layer-description">
            <!-- ko ifnot: children().length -->
            <!-- ko ifnot: subLayers().length -->
            <!-- ko if: detailImage -->
            <img data-bind="attr :{ src: detailImage}"/>
            <!-- /ko -->
            <!-- /ko -->
            <!-- ko if: subLayers().length -->
            <ul class="list-unstyled filter filter-layers" data-bind="foreach: subLayers">
                <li data-bind="template: templateName"></li>
            </ul>
            <!-- /ko -->
            <!-- /ko -->
            <!-- ko if: children().length -->
            <div data-bind="foreach: children">
                <div data-bind="visible: $parent.type != layerTypeEnum.Combined  || isVisible() || parentLayer.isVisible()">
                    <!-- ko template: 'template-layer-list-item' -->
                    <!-- /ko -->
                </div>
            </div>
            <!-- /ko -->
            <div data-bind="html: legend"></div>
        </div>
        <div id="template-combined-layers">
            <div>
                <ul class="list-unstyled u-margin-Bn" data-bind="foreach: $data.children">
                    <li>
                        <label>
                            <input type="checkbox" data-bind="checked: isVisible,uniqueId:true"/>
                            <label data-bind="uniqueFor:'after'"></label>
                            <span data-bind="text:title"></span>
                        </label>
                    </li>
                </ul>
            </div>
        </div>

        <div id="template-facet-timeline">
            <button type="button" class="btn btn-sm btn-default btn-block" title="Animate layers" data-bind="visible:children().length>1,toggleClick:animateChildren,attr:{'aria-pressed':animateChildren,'aria-valuenow': selectedItem}">
                <i class="icon-play" data-bind="css:{'icon-pause':animateChildren,'icon-play':!animateChildren()}"></i>
                <span class="sr-only" data-bind="text: animateChildren()?'Pause':'Play'"></span>
            </button>
            <div class="list-group list-group-sm timeline">
                <!-- ko foreach: children -->
                <label class="list-group-item" data-bind="css:{active: $parent.isSelectedChild($data)}">
                    <input type="radio" data-bind="checked : $parent.selectedVal, attr:{name:'timeline_'+$parent.indexer, value: $data}"/>
                    <span data-bind="dateTimeView: $data, dateTimeViewFormat: 'dS mmmm yyyy'"></span>
                </label>
                <!-- /ko -->
            </div>
        </div>
        <div id="template-layer-value-over">
            <div data-bind="foreach: $data.options.popover">
                <span class="h4" data-bind="text: Title"></span>
                <div data-bind="if:Values">
                    <div class="list-group list-radio" role="menu" data-bind="foreach: Object.keys(Values||{})">
                        <label class="list-group-item" data-bind="tabindex : $index">
                            <input type="radio" data-bind="checkedValue:$data,checked:$root.layerSettings[$parent.Key],attr:{name:$root.id+'_'+$parent.Key+'_opt}'"/>
                            <span data-bind="text:$parent.Values[$data]"></span>
                        </label>
                    </div>
                </div>
                <div data-bind="if: Value">
                    <label class="list-group-item">
                        <span data-bind="text:$root.layerSettings[$data.Key]"></span>
                        <input data-bind="value: $root.layerSettings[$data.Key],
                       valueUpdate:'input',
                       attr:{
                        max: isNaN($data.Max)? $root[$data.Max] : +$data.Max,
                        min: isNaN($data.Min)? $root[$data.Min] : +$data.Min
                       }" type="range"/>
                    </label>
                </div>
            </div>
        </div>
    </div>
}

<div id="MapWrapper" class="claro" data-bind="css:{'bottom-panel-closed':temporalSlider.closed}">
    <div id="map" style="background-color: white;">
        <div id="loadingMapDiv" data-bind="visible: isLoading, css:{'loading-long-description':loadingLayers().length}" data-html2canvas-ignore="true" class="loading text" style="display: none;">
            <div data-bind="visible : disableAggregation">
                <p>Loading single layer points on map for:</p>
                <p data-bind="if : loadingLayers().length > 0">
                    <b data-bind="text : loadingLayerTitles"></b>
                </p>
                <p>This may take a while</p>
            </div>
            <div data-bind="visible : !disableAggregation()">
                <p data-bind="ifnot : temporalSlider.isPlaying">Loading<!-- ko if:loadingLayers().length -->:<!-- /ko --></p>
                <p data-bind="if : temporalSlider.isPlaying">Changing time period for:</p>
                <p data-bind="if : loadingLayers().length > 0">
                    <b data-bind="text : loadingLayerTitles"></b>
                </p>
                <p data-bind="if : temporalSlider.isPlaying">Please wait.</p>
                <br />
            </div>
        </div>
    </div>
    <div id=scaleWrapper class="well text-center">
        <div id="scalebar" class=""></div>
        <div id="coordinates" class="u-padding-Txxs u-font-85"></div>
    </div>
</div>


<div id="mapToolbar" data-html2canvas-ignore="true" class="btn-toolbar" role="toolbar">
    <div class="btn-group" role="group">
        <div class="btn-group countryOverviewDropdown" role="group" data-bind="with : countryOverview">
            <select class="chosenselect" data-bind="value : selectedCountry, options : countries, optionsText : 'DisplayName', optionsCaption : 'Find Country Overview', chosen : {}"></select>
        </div>
        <div class="btn-group" role="group" id="customShapeMenu">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false" title="Allows  you to draw an area on map so that you can analyse, export or set up a saved search" data-bind="tipsy:{gravity:'e'}">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="icon- large" fill="#444" stroke="#444"><path d="M11 2L3 4v7l10 3-2-12z" fill="none" /><circle cx="3" cy="4" r="1.5" /><circle cx="11" cy="2" r="1.5" /><circle cx="13" cy="14" r="1.5" /><circle cx="3" cy="11" r="1.5" /></svg>
                <span class="caret"></span>
            </button>
            <button type="button" class="btn btn-default" style="position: absolute;left: 0;top: 100%;display:none;" id="showDrawing">
                Show Hidden Search Area
            </button>
            <ul class="dropdown-menu dropdown-menu-right" role="menu">
                <li>
                    <button class="btn btn-link" type="button" role="button" data-bind="click: draw.activateTool.bind($data, 'POLYGON')">
                        Draw custom area search
                    </button>
                </li>
                <li>
                    <button class="btn btn-link" type="button" role="button" data-bind="click: draw.selectArea">
                        Load saved search area
                    </button>
                </li>
            </ul>
        </div>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false" title="Base Layers" data-bind="tipsy:{}">
                <i class='icon-layers large'></i>
                <span class="caret"></span>
            </button>
            <div class="dropdown-menu" role="menu" id="basemapContainer">
                <div class="esriBasemapGallery" id="basemapGallery"></div>
            </div>
        </div>

        <div class="btn-group dropdown" role="group" id="SaveSubscribeMenu">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false" title="Save &amp; Subscribe" data-bind="tipsy:{}">
                <i class='icon-folder-open large'></i>
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu dropdown-menu-right" role="menu">
                <!-- ko foreach: LayerManagerVM.Layers-->
                <!-- ko if: isVisible() && canExportData && saveSearch -->
                <li>
                    <button class="btn btn-link" data-bind="click:saveSearch" type="button" role="button">
                        <i class='icon-export'></i>
                        Save <!-- ko text: title --><!-- /ko --> search
                    </button>
                </li>
                <!-- /ko -->
                <!-- /ko -->
            </ul>
        </div>
        <div class="btn-group dropdown" role="group" id="exportMenu">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false" title="Export" data-bind="tipsy:{}">
                <i class='icon-export large'></i>
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu dropdown-menu-right" role="menu">
                <li>
                    <button id="ExportButton" class="btn btn-link js-btn-export" data-image="png" type="button" role="button">
                        <i class='icon-picture'></i>
                        Download map as image
                    </button>
                </li>
                <li>
                    <button id="ExportButtonGif" class="btn btn-link js-btn-export" data-image="gif" type="button" role="button">
                        <i class='icon-picture'></i>
                        Download map as animated GIF <span class="beta"></span>
                    </button>
                </li>
                <!-- ko foreach: LayerManagerVM.Layers-->
                <!-- ko if: isVisible() && canExportData -->
                <li>
                    <button class="btn btn-link" data-bind="click:exportData" type="button" role="button">
                        <i class='icon-export'></i>
                        Export <!-- ko text: title --><!-- /ko --> data
                    </button>
                </li>
                <!-- ko foreach: hiddenLayers -->
                <li data-bind="tipsy:{},attr: { title: $root.exportDataTooltip() }">
                    <button class="btn btn-link" data-bind="click:exportData, enable: $root.enableExportData()" type="button" role="button">
                        <i class='icon-export'></i>
                        Export <!-- ko text: title --><!-- /ko --> data
                    </button>
                </li>
                <!-- /ko -->
                <!-- /ko -->
                <!-- /ko -->
            </ul>
        </div>

        <div class="btn-group dropdown" role="group" id="measureMenu" data-bind="if:measure">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-expanded="false" title="Measure" data-bind="tipsy:{}">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="icon- large" fill="#444" stroke="#444"><path d="M2.5 1.5l-2 2 2 2V4h10v1.5l2-2-2-2V3h-10z" fill-rule="evenodd" /><path fill="#fff" stroke-width="1.3" stroke-linecap="round" d="M1.2 6.5h12.5v6H1.2z" /><path d="M3.5 7v2M5.5 7v3.3M7.5 6.9V9M9.5 6.9v3.4M11.5 7v2" fill-rule="evenodd" stroke-linecap="round" /></svg>
                <span class="caret"></span>
            </button>
            <div class="dropdown-menu dropdown-menu-right" role="menu" data-bind="with:measure" style="width:450px;">
                <button type="button" class="close closePopup" aria-label="Close" style="position: absolute;right: .5em;top: .15em;" data-bind="click:close">
                    <span aria-hidden="true">×</span>
                </button>
                <div class="grid">
                    <ul class="dropdown-menu relative u-border-none grid-1-2 u-padding-Hn">
                        <li>
                            <button class="btn btn-link width-100" style="text-align:left;" type="button" role="button" data-bind="click:activeTool.bind($data,'area')">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="icon- large" fill="#444" stroke="#444"><path d="M11 2L3 4v9.5l10 .5z" fill="none" stroke="#000" /><circle cx="3" cy="4" r="1.5" /><circle cx="11" cy="2" r="1.5" /><circle cx="13" cy="14" r="1.5" /><circle cx="3" cy="13.5" r="1.5" /><g fill="#fff" stroke-linecap="round"><path stroke-width="1.3" d="M1.2 5.4h12.5v6H1.2z" /><path d="M3.5 6v2m2-2.1v3.3m2-3.4V8m2-2.2v3.4m2-3.3v2" /></g></svg>
                                Measure area
                                <i class='icon-right-open pull-right' style='margin-top: 0.5em;' data-bind='visible:activeTool()=="area"'></i>
                            </button>
                        </li>
                        <li>
                            <button class="btn btn-link width-100" style="text-align:left;" type="button" role="button" data-bind="click:activeTool.bind($data,'distance')">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="icon- large" fill="#444" stroke="#444"><path d="M2.5 1.5l-2 2 2 2V4h10v1.5l2-2-2-2V3h-10z" fill-rule="evenodd" /><path fill="#fff" stroke-width="1.3" stroke-linecap="round" d="M1.2 6.5h12.5v6H1.2z" /><path d="M3.5 7v2M5.5 7v3.3M7.5 6.9V9M9.5 6.9v3.4M11.5 7v2" fill-rule="evenodd" stroke-linecap="round" /></svg>
                                Measure distance
                                <i class='icon-right-open pull-right' style='margin-top: 0.5em;' data-bind='visible:activeTool()=="distance"'></i>
                            </button>
                        </li>
                        <li>
                            <button class="btn btn-link width-100" style="text-align:left;" type="button" role="button" data-bind="click:activeTool.bind($data,'location')">
                                <i class='icon-target'></i>
                                Copy Location
                                <i class='icon-right-open pull-right' style='margin-top: 0.5em;' data-bind='visible:activeTool()=="location"'></i>
                            </button>
                        </li>
                        <li role="presentation" data-bind='visible:activeTool()=="area" || activeTool() == "distance"'>
                            <ul class="grey1 inline-block u-margin-Lm u-margin-Ts u-padding-Hs"><li>Click to start measuring</li><li>Double click to end</li></ul>
                        </li>
                    </ul>
                    <div class="grid-1-2 grey4-bg u-padding-Tm">
                        <div class="hidden">
                            <div id="measurementDiv"></div>
                        </div>
                        <!-- ko if: activeTool() -->
                        <select id="unitSelector" data-bind="options: units, value: unit, chosen:{disable_search:true, width:'100%'}"></select>
                        <h4>Measurement Result</h4>
                        <!-- ko if: activeTool() == 'location' -->
                        <table class="width-100 text-right">
                            <tr><td></td><td class="text-left">Latitude</td><td class="text-left">Longitude</td></tr>
                            <tr>
                                <td><img src="https://js.arcgis.com/3.22/esri/dijit/images/cursor16x24.png" style="vertical-align: middle"></td>
                                <td data-bind="text:location.mouseLat"></td>
                                <td data-bind="text:location.mouseLon"></td>
                            </tr>
                            <tr>
                                <td><img src="https://js.arcgis.com/3.22/esri/dijit/images/esriGreenPin16x26.png" style="vertical-align: middle"></td>
                                <td data-bind="text:location.markerLat"></td>
                                <td data-bind="text:location.markerLon"></td>
                            </tr>
                        </table>
                        <!-- /ko -->
                        <!-- ko if: activeTool() == 'distance' -->
                        <p data-bind="text: measurementText"></p>
                        <p data-bind="visible: !measurementText()" class="alert alert-info">Draw a line on the map</p>
                        <!-- /ko -->
                        <!-- ko if: activeTool() == 'area' -->
                        <p data-bind="text: measurementText"></p>
                        <p data-bind="visible: !measurementText()" class="alert alert-info">Draw an area on the map</p>
                        <!-- /ko -->
                        <div data-bind="if:activeTool">
                            <button class="btn btn-block btn-default u-margin-Ts" data-bind="click: copyValue">Copy <!-- ko text:activeTool --><!-- /ko --></button>
                        </div>
                        <!-- /ko -->
                        <div class="alert alert-info" data-bind="visible: !activeTool()">Select one of the measuring options on the left.</div>
                    </div>
                </div>
            </div>
        </div>

        <button onclick="_mapPageVM.TogglefullScreen();" type="button" class="btn btn-default" title="Expand To fullscreen" data-bind="tipsy:{title:function(){return (isfullScreen()?'Collapse fullscreen':'Expand to fullscreen')}}"><i id="ToggleFullScreen" class="icon-resize-full large"></i></button>
    </div>
</div>

<!-- ko with: temporalSlider -->
<div class="map-panel-bottom panel-bottom closed" data-bind="css:{closed:closed}">
    <button class="showFilters show" data-bind="toggleClick:closed,tipsy:{gravity:'s', title:function(){return (closed()?'Show':'Hide')+' Timeline'}}">
        <span><i class="icon-down-open"></i></span>
    </button>
    <div id="temporalSlider"></div>
</div>
<!-- /ko -->
<!-- We don't want the map to be bound to the map vm, but to the layer currently using it.-->
<div data-bind="stopBindingChildren: true">
    <div class="mapModal modal modal-bottom-right fade" tabindex="-1" role="dialog" id="mapItemModal" aria-labelledby="mapItemModal_label" aria-hidden="true">
        <div class="modal-dialog u-margin-Axxs">
            <div class="modal-content">
                <div class="modal-header draggable">
                    <button type="button" aria-label="Expand" class="expand" onclick="_mapPageVM.togglePanelSize(this);">
                        <span aria-hidden="true"><i class="icon-resize-full small"></i></span>
                    </button>
                    <button type="button" class="close closePopup" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"><i class="icon-cancel small"></i></span>
                    </button>
                    <div class="u-padding-Vxxs map-modal-breadcrumb" id="mapItemModal_label"></div>
                    <div class="modal-loading"></div>
                </div>
                <div class="modal-body u-padding-Hn u-padding-Tn"></div>
                <div class="modal-footer">
                    <span class="text-info u-margin-Rm hidden map-modal-limit-warning"><a class="btn-link" title="Click to view more" target="_blank" data-href="/TerrorismInsurgencyEvents/search#f={0}">(Latest 100 points shown)</a></span>
                    <button onclick="_mapPageVM.resetPopupArrays();" type="button" class="btn btn-default closePopup" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="mapModal modal modal-top-right fade" tabindex="-1" role="dialog" id="countryOverviewModal" aria-labelledby="countryOverviewModal_label" aria-hidden="true">
        <div class="modal-dialog u-margin-Axxs">
            <div class="modal-content">
                <div class="modal-header draggable">
                    <button type="button" class="close closePopup" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                    <div class="u-padding-Vxxs modal-title" id="countryOverviewModal_label"></div>
                </div>
                <div class="modal-body u-padding-Hn u-padding-Tn"></div>
            </div>
        </div>
    </div>
</div>

<div class="tipsy tipsy-w" id="bubbleTip" style="display: none;">
    <div class="tipsy-arrow"></div>
    <div class="tipsy-inner">
    </div>
</div>
@section additional_markup
{
    @Html.Partial("Map/Tutorial")
}
@(CmpHtmlHelpers.GetEnums<RestDataVersion>())