var Cookies = {

    createCookie: function (options) {

        if (options === undefined || options === null || typeof options !== "object") {
            throw "You must supply valid options.";
        }

        var name = options.name;
        var value = options.value;
        var days = options.days || -1;
        var secure = options.secure === undefined ? location.protocol === 'https:' : options.secure;
        var httpOnly = options.httpOnly === undefined ? false : options.httpOnly;
        var callback = options.callback || function () { };

        if (name) {
            var http = new XMLHttpRequest();
            http.open("POST",
                "/cookie/set?name=" +
                name +
                "&value=" +
                value +
                "&days=" +
                days +
                "&secure=" +
                secure +
                "&httpOnly=" +
                httpOnly,
                true);
            http.onreadystatechange = function() {
                if (http.readyState === 4 && http.status === 200) {
                    callback(http.readyState, http.responseText);
                }
            }

            http.send();
        } else {
            throw "You must supply a cookie name.";
        }
    },

    readCookie: function (name) {
        if (name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) === ' ') c = c.substring(1, c.length);
                if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
            }
        } else {
            throw "You must supply a cookie name.";
        }
    },

    deleteCookie: function (options) {

        if (options === undefined || options === null || typeof options !== "object") {
            throw "You must supply valid options.";
        }

        var name = options.name;

        if (options.name) {
            var callback = options.callback || function () { };

            var http = new XMLHttpRequest();
            http.open("POST", "/cookie/delete?name=" + name, true);
            http.onreadystatechange = function () {
                if (http.readyState === 4 && http.status === 200) {
                    callback(http.readyState, http.responseText);
                }
            }

            http.send();
        } else {
            throw "You must supply a cookie name.";
        }
    }
};